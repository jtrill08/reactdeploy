{"version":3,"sources":["firebase/config.js","hooks/useFirestore.js","comps/ImageGrid.js","comps/Modal.js","comps/Title.js","hooks/useStorage.js","comps/ProgressBar.js","comps/UploadForm.js","comps/Nav.js","comps/CreatePage.js","comps/Submit.js","App.js","index.js"],"names":["firebase","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","projectStorage","projectFirestore","timestamp","FieldValue","serverTimestamp","useFirestore","collection","useState","docs","setDocs","useEffect","unsub","orderBy","onSnapshot","snap","documents","forEach","doc","push","data","id","ImageGrid","setSelectedImg","console","log","className","map","div","key","layout","whileHover","opacity","onClick","url","img","src","alt","initial","animate","transition","delay","Modal","selectedImg","e","target","classList","contains","y","Title","useStorage","file","progress","setProgress","error","setError","setUrl","storageRef","ref","name","collectionRef","put","on","percentage","bytesTransferred","totalBytes","err","a","getDownloadURL","createdAt","add","ProgressBar","setFile","width","UploadForm","types","type","onChange","selected","files","includes","Nav","collapseOnSelect","expand","variant","Brand","href","Toggle","aria-controls","Collapse","Link","eventKey","MyForm","props","submitForm","bind","state","status","this","onSubmit","action","method","class","ev","preventDefault","form","FormData","xhr","XMLHttpRequest","open","setRequestHeader","onreadystatechange","readyState","DONE","reset","setState","send","React","Component","submit","App","path","exact","component","CreatePage","Submit","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.421cbca6.chunk.js","sourcesContent":["import * as firebase from 'firebase/app';\nimport 'firebase/storage'; \nimport 'firebase/firestore';\n\n// Your web app's Firebase configuration  \nvar firebaseConfig = {    \n    apiKey: \"AIzaSyAeXetUIIcGrM2k70porcN-CfPfvH63g28\",    \n    authDomain: \"firegram-87377.firebaseapp.com\",    \n    databaseURL: \"https://firegram-87377.firebaseio.com\",    \n    projectId: \"firegram-87377\",    \n    storageBucket: \"firegram-87377.appspot.com\",    \n    messagingSenderId: \"1069714719402\",    \n    appId: \"1:1069714719402:web:a029b7312b32f933cc46d3\"  \n};  \n// Initialize Firebase  \nfirebase.initializeApp(firebaseConfig);\n\nconst projectStorage = firebase.storage();\nconst projectFirestore = firebase.firestore();\nconst timestamp = firebase.firestore.FieldValue.serverTimestamp;\n\nexport { projectStorage, projectFirestore, timestamp }; ","import { useState, useEffect } from 'react'; \nimport { projectFirestore } from '../firebase/config';\n\nconst useFirestore = (collection) => {\n    const [docs, setDocs] = useState([]);\n\n    useEffect(() => {\n        const unsub = projectFirestore.collection(collection)\n            .orderBy('createdAt', 'desc')\n            .onSnapshot(snap => {\n                let documents = []; \n                snap.forEach(doc => {\n                    documents.push({...doc.data(), id: doc.id});\n                });\n                setDocs(documents);\n            });\n\n        return () => unsub();\n\n    }, [collection]); \n\n    return { docs };\n}\n\nexport default useFirestore;","import React from 'react';\nimport useFirestore from '../hooks/useFirestore';\nimport { motion } from 'framer-motion';\n\nconst ImageGrid = ({ setSelectedImg }) => {\n    const { docs } = useFirestore('images');\n    console.log(docs);\n\n    return (\n        <div className=\"container\">\n            <div className=\"img-grid\">\n                { docs && docs.map(doc => (\n                    <motion.div className=\"img-wrap\" key={doc.id}\n                        layout\n                        whileHover={{ opacity: 1 }}\n                    onClick={() => setSelectedImg(doc.url)}\n                    >\n                    <motion.img src={doc.url} alt=\"uploaded pic\" \n                        initial={{ opacity: 0 }}\n                        animate={{ opacity: 1 }}\n                        transition={{ delay: 1 }}\n                    />\n                    </motion.div>\n                ))}\n            </div>\n        </div>\n    )\n\n}\n\nexport default ImageGrid;","import React from 'react'; \nimport { motion } from 'framer-motion';\n\nconst Modal = ({selectedImg, setSelectedImg }) => {\n\n    const handleClick= (e) => {\n        if (e.target.classList.contains('backdrop')){\n        setSelectedImg(null);\n        }\n    \n    }\n\n    return (\n        <motion.div className=\"backdrop\" onClick={handleClick}\n            initial={{ opacity: 0 }}\n            animate={{ opacity: 1 }}\n        >\n            <motion.img src={selectedImg} alt=\"englarged pic\" \n                initial={{ y: \"-100vh\" }}\n                animate={{ y: 0}}\n            />\n        </motion.div>\n    )\n\n}\n\nexport default Modal;","import React from 'react';\n\nconst Title = () => {\n  return (\n    <div className=\"title\">\n      <h2>TODAY'S PROMPT</h2>\n      <p1>Fruits</p1>\n    </div>\n  )\n}\n\nexport default Title;","import { useState, useEffect } from 'react'; \nimport { projectStorage, projectFirestore, timestamp } from '../firebase/config'; \n\nconst useStorage = (file) => {\n    const [progress, setProgress] = useState(0); \n    const [error, setError] = useState(null); \n    const [url, setUrl] = useState(null);\n\n    useEffect(() => {\n      // references \n      const storageRef = projectStorage.ref(file.name)\n      const collectionRef = projectFirestore.collection('images');\n\n      storageRef.put(file).on('state_changed', (snap) => {\n          let percentage = (snap.bytesTransferred / snap.totalBytes) * 100; \n          setProgress(percentage);\n        }, (err) => {\n          setError(err);\n        }, async () => {\n          const url = await storageRef.getDownloadURL();\n          const createdAt = timestamp();\n          collectionRef.add({ url, createdAt }); \n          setUrl(url);\n        })\n    }, [file])\n\n    return { progress, url, error }\n\n}\n\nexport default useStorage;","import React, { useEffect } from 'react'; \nimport useStorage from '../hooks/useStorage';\nimport { motion } from 'framer-motion';\n\nconst ProgressBar = ({ file, setFile }) => {\n    const { url, progress } = useStorage(file);\n    \n    useEffect(() => {\n      if (url) {\n          setFile(null);\n      }\n    }, [url, setFile])\n\n    return (\n        <motion.div className=\"progress-bar\" \n            initial={{ width: 0 }}\n            animate={{ width: progress + '%' }}\n        ></motion.div>\n    )\n\n}\n\nexport default ProgressBar;","import React, { useState} from 'react';\nimport ProgressBar from './ProgressBar';\n\nconst UploadForm = () => {\n    const [file, setFile] = useState(null); \n    const [error, setError] = useState(null);\n\n    const types = ['image/png', 'image/jpeg'];\n\n    const changeHandler = (e) => {\n        let selected = e.target.files[0];\n\n        if (selected && types.includes(selected.type)) {\n          setFile(selected); \n          setError('');\n        } else {\n            setFile(null);\n            setError('Please select an image file (png or jpeg)');\n\n        }\n    };\n\n    return (\n        <form>\n          <label>\n            <input type=\"file\" onChange={changeHandler} />\n            <span>+</span>\n          </label>\n          <div className=\"output\">\n            { error && <div className=\"error\">{ error }</div>}\n            { file && <div>{ file.name }</div> }\n            { file && <ProgressBar file={file} setFile={setFile} /> }\n          </div>\n        </form>\n      );\n    }\n\nexport default UploadForm;","import React from 'react';\nimport '../index.css';\nimport { Link } from 'react-router-dom';\nimport * as ReactBootStrap from \"react-bootstrap\";\n\nfunction Nav() {\n  return (\n      <div className = \"Nav\">\n      <ReactBootStrap.Navbar collapseOnSelect expand=\"xl\"  variant=\"dark\" >\n      <ReactBootStrap.Navbar.Brand href=\"/\">DRAWW</ReactBootStrap.Navbar.Brand>\n      <ReactBootStrap.Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\n      <ReactBootStrap.Navbar.Collapse id=\"responsive-navbar-nav\">\n        <ReactBootStrap.Nav className=\"mr-auto\">\n        </ReactBootStrap.Nav>\n        <ReactBootStrap.Nav>\n          <ReactBootStrap.Nav.Link href=\"/CreatePage\">+ create a page</ReactBootStrap.Nav.Link>\n          <ReactBootStrap.Nav.Link eventKey={2} href=\"/Submit\">\n            submit a prompt\n          </ReactBootStrap.Nav.Link>\n        </ReactBootStrap.Nav>\n      </ReactBootStrap.Navbar.Collapse>\n    </ReactBootStrap.Navbar>\n    </div>\n  );\n}\n\nexport default Nav;\n","import React from \"react\";\nimport './CreatePage.css';\n\nexport default class MyForm extends React.Component {\n  constructor(props) {\n    super(props);\n    this.submitForm = this.submitForm.bind(this);\n    this.state = {\n      status: \"\"\n    };\n  }\n\n  render() {\n    const { status } = this.state;\n   \n\n    return (\n      <form\n        onSubmit={this.submitForm}\n        action=\"https://formspree.io/f/xjvpoeon\"\n        method=\"POST\"\n      >\n        <h1 class=\"heading\"> Want to create your own prompt page? </h1> \n        <h2 class=\"heading2\"> Sign up to receive early access :) </h2>\n        <label type=\"emailTitle\">Email:</label>\n        <input type=\"email\" name=\"email\" />\n        {status === \"SUCCESS\" ? <p>Thanks!</p> : <button type=\"submitButton\">Submit</button>}\n        {status === \"ERROR\" && <p>Ooops! There was an error.</p>}\n      </form>\n    );\n  }\n\n  submitForm(ev) {\n    ev.preventDefault();\n    const form = ev.target;\n    const data = new FormData(form);\n    const xhr = new XMLHttpRequest();\n    xhr.open(form.method, form.action);\n    xhr.setRequestHeader(\"Accept\", \"application/json\");\n    xhr.onreadystatechange = () => {\n      if (xhr.readyState !== XMLHttpRequest.DONE) return;\n      if (xhr.status === 200) {\n        form.reset();\n        this.setState({ status: \"SUCCESS\" });\n      } else {\n        this.setState({ status: \"ERROR\" });\n      }\n    };\n    xhr.send(data);\n  }\n}","import React from 'react'\nimport './CreatePage.css';\n\nfunction Submit() {\n    return (\n        <div>\n            <h1>Submit</h1>\n            gsdgsd\n        </div>\n    )\n}\n\n// Customize this 'myform.js' script and add it to your JS bundle.\n// Then import it with 'import MyForm from \"./myform.js\"'.\n// Finally, add a <MyForm/> element whereever you wish to display the form.\n\nexport default class submit extends React.Component {\n  constructor(props) {\n    super(props);\n    this.submitForm = this.submitForm.bind(this);\n    this.state = {\n      status: \"\"\n    };\n  }\n\n  render() {\n    const { status } = this.state;\n    return (\n      <form\n        onSubmit={this.submitForm}\n        action=\"https://formspree.io/f/xjvpoeon\"\n        method=\"POST\"\n      >\n        <label type=\"messageTitle\">Submit a prompt:</label>\n        <input type=\"text\" name=\"message\" />\n        {status === \"SUCCESS\" ? <p>Thanks!</p> : <button type=\"submitButton\">Submit</button>}\n        {status === \"ERROR\" && <p>Ooops! There was an error.</p>}\n      </form>\n    );\n  }\n\n  submitForm(ev) {\n    ev.preventDefault();\n    const form = ev.target;\n    const data = new FormData(form);\n    const xhr = new XMLHttpRequest();\n    xhr.open(form.method, form.action);\n    xhr.setRequestHeader(\"Accept\", \"application/json\");\n    xhr.onreadystatechange = () => {\n      if (xhr.readyState !== XMLHttpRequest.DONE) return;\n      if (xhr.status === 200) {\n        form.reset();\n        this.setState({ status: \"SUCCESS\" });\n      } else {\n        this.setState({ status: \"ERROR\" });\n      }\n    };\n    xhr.send(data);\n  }\n}\n\n\n","import React, { useState } from 'react';\nimport ImageGrid from './comps/ImageGrid';\nimport Modal from './comps/Modal';\nimport Title from './comps/Title';\nimport UploadForm from './comps/UploadForm';\nimport Nav from './comps/Nav';\nimport './index.css';\nimport CreatePage from './comps/CreatePage';\nimport Submit from './comps/Submit';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport './comps/CreatePage.css'\n\n\n\nfunction App() {\n  const [selectedImg, setSelectedImg] = useState(null);\n\n  const Home = () => (\n    <div>\n      <Title/>\n        <UploadForm />\n        <ImageGrid setSelectedImg={setSelectedImg}/>\n      { selectedImg && <Modal selectedImg={selectedImg} setSelectedImg={setSelectedImg} /> }\n    </div>\n  );\n\n  return (\n    <Router>\n      <div className=\"App\">\n        <Nav />\n        <Switch>\n          <Route path=\"/\" exact component={Home} />\n          <Route path=\"/CreatePage\" component={CreatePage} />\n          <Route path=\"/Submit\" component={Submit} />\n       </Switch>\n      </div>\n      </Router>\n  );\n}\n\nexport default App;\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA"],"sourceRoot":""}